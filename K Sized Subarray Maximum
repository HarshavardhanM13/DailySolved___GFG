
K Sized Subarray Maximum


class Solution:
    

    def max_of_subarrays(self, k, arr):
        res = []
        dq = deque()  # Stores indices of useful elements for each window
    
        for i in range(len(arr)):
            # Remove elements from deque that are out of the current window
            if dq and dq[0] == i - k:
                dq.popleft()
    
            # Remove all elements smaller than the current element from the deque
            while dq and arr[dq[-1]] < arr[i]:
                dq.pop()
    
            # Add current element index to deque
            dq.append(i)
    
            # Append the maximum for the current window to the result list
            if i >= k - 1:
                res.append(arr[dq[0]])
    
        return res
