Split Linked List in Parts ----------------> LeetCode

                                                                      Split Linked List in Parts


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode[] splitListToParts(ListNode head, int k) {
        ListNode[] ls = new ListNode[k];
        int N = 0;
        ListNode curr = head;
        while(curr!=null){
            N += 1;
            curr = curr.next;
        }
        int base_length = N/k;
        int remainder = N%k;
        curr = head;
        for(int i=0;i<k;i++){
            ls[i] = curr;
            int times = base_length - 1 + (remainder>0?1:0);
            for(int j=0;j<times;j++){
                if(curr == null) break;
                curr = curr.next;
            }
            remainder -= (remainder>0?1:0);
            if(curr != null){
                ListNode temp = curr;
                curr = curr.next;
                temp.next = null;
            }
        }
        return ls;
    }
}
